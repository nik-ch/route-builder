{"version":3,"sources":["ymap-api-wrapper.js","components/route-point.js","components/route-points-list.js","dnd-touch.js","components/app.js","error-boundary.js","index.js"],"names":["YandexMapApiWrapper","mapContainerRef","centerCoordinates","zoom","this","yandexMap","Error","window","ymaps","Map","center","name","dragEndHandler","placemark","Placemark","getCenter","balloonContentBody","draggable","events","add","geoObjects","placemarks","polyline","geometry","setCoordinates","map","p","getCoordinates","length","Polyline","coordinates","axios","get","params","apikey","geocode","concat","format","results","lang","answer","data","response","GeoObjectCollection","featureMember","GeoObject","description","isShown","options","set","setCenter","remove","RoutePoint","props","showGeoData","geoDataShown","geoData","rpClassName","dragStarted","dragEntered","react_default","a","createElement","className","onDragStart","onDragStartHandler","onDragEnd","onDragEndHandler","onDragEnter","onDragEnterHandler","onDragLeave","onDragLeaveHandler","onDragOver","onDragOverHandler","onDrop","onDropHandler","title","onClick","event","stopPropagation","onRemoveHandler","onClickHandler","RoutePointsList","state","startIndex","enterIndex","index","_this","setState","onPointDropHandler","onInputKeyUp","keyCode","target","value","onNameSetHandler","e","preventDefault","_this2","routePoints","ind","route_point","key","id","onRemovePointHandler","type","placeholder","onKeyUp","React","Component","DragAndDropTouch","_instance","_class","Object","classCallCheck","_lastCLick","document","addEventListener","touchStart","bind","passive","touchMove","touchEnd","createClass","_shouldHandle","Date","now","_lastClick","_DBLCLICK","_dispatchEvent","_reset","src","_closestDraggable","_dragSource","_ptDown","_getPoint","_lastTouch","setTimeout","_img","_CTXMENU","_getTarget","_getDelta","_THRESHOLD","_createImage","_lastTarget","_moveImage","_destroyImage","indexOf","defaultPrevented","touches","parentElement","hasAttribute","pt","el","elementFromPoint","x","y","getComputedStyle","pointerEvents","cloneNode","_copyStyle","rc","getBoundingClientRect","_imgOffset","left","top","style","opacity","_OPACITY","toString","body","appendChild","requestAnimationFrame","s","position","zIndex","Math","round","dist","_rmvAttrs","forEach","attr","removeAttribute","cs","i","children","removeChild","abs","page","pageX","clientX","pageY","clientY","_dataTransfer","_createDataTransfer","evt","createEvent","initEvent","t","button","buttons","_copyProps","_kbdProps","_ptProps","dataTransfer","dispatchEvent","dst","prop","_class2","_dropEffect","_effectAllowed","_data","_dropEffectPossibleValues","_effectAllowedPossibleValues","includes","App","possibleConstructorReturn","getPrototypeOf","call","addRoutePoint","lastUsedId","ymapApiWrapper","createPlacemark","placemarkDragEndHandler","routePoint","slice","updatePolyline","rp","error","showErrorToast","find","removeRoutePoint","currentRoutePoints","placemarkToRemove","removePlacemark","swapRoutePoints","fromInd","toInd","from","min","to","max","fromPoint","toPoint","getGeographicAddress","_ref","asyncToGenerator","regenerator_default","mark","_callee","toggleGeoData","newGeoDataShownState","wrap","_context","prev","next","togglePlacemarkFocus","getPlacemarkGeographicAddress","sent","t0","stop","_x","apply","arguments","ymapId","createHandlers","createMap","errorText","toast","TYPE","ERROR","bodyClassName","route_points_list_RoutePointsList","lib","hideProgressBar","ErrorBoundary","hasError","render","error_boundary_ErrorBoundary","app_App","getElementById"],"mappings":"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","file":"static/js/main.fd5a20cb.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default class YandexMapApiWrapper {\r\n\r\n    createMap(mapContainerRef, centerCoordinates, zoom) {\r\n        if(this.yandexMap) {\r\n            throw new Error(\"yandex map instance already exists\");\r\n        }\r\n        this.yandexMap = new window.ymaps.Map(mapContainerRef, {\r\n            center: centerCoordinates,\r\n            zoom\r\n        });\r\n    }\r\n\r\n    createPlacemark(name, dragEndHandler) {\r\n        const placemark = new window.ymaps.Placemark(\r\n            this.yandexMap.getCenter(),\r\n            { balloonContentBody: name },\r\n            { draggable: true }\r\n        );\r\n        if(dragEndHandler) {\r\n            placemark.events.add(\"dragend\", dragEndHandler);\r\n        }\r\n        this.yandexMap.geoObjects.add(placemark);\r\n        return placemark;\r\n    }\r\n\r\n    updatePolyline(placemarks) {\r\n        if(this.polyline != null) {\r\n            this.polyline.geometry.setCoordinates(placemarks.map(p => p.geometry.getCoordinates()));\r\n        } else if(placemarks.length > 1) {\r\n            this.polyline = new window.ymaps.Polyline(placemarks.map(p => p.geometry.getCoordinates()));\r\n            this.yandexMap.geoObjects.add(this.polyline);\r\n        }\r\n    }\r\n\r\n    async getPlacemarkGeographicAddress(placemark) {\r\n        const coordinates = placemark.geometry.getCoordinates(); \r\n        const answer = await axios.get(\"https://geocode-maps.yandex.ru/1.x/\", {\r\n            params: {\r\n                apikey: \"9f0d1ea1-8932-41ba-a54e-612efe8507b1\",\r\n                geocode: `${coordinates[1]},${coordinates[0]}`,\r\n                format: \"json\",\r\n                results: 1,\r\n                lang: \"en_RU\"\r\n            }\r\n        });\r\n        return {\r\n            name: answer.data.response.GeoObjectCollection.featureMember[0].GeoObject.name,\r\n            description: answer.data.response.GeoObjectCollection.featureMember[0].GeoObject.description\r\n        };\r\n    }\r\n\r\n    togglePlacemarkFocus(placemark, isShown) {\r\n        if(isShown) {\r\n            placemark.options.set(\"preset\", \"islands#orangeIcon\");\r\n            this.yandexMap.setCenter(placemark.geometry.getCoordinates());\r\n        } else {\r\n            placemark.options.set(\"preset\", \"islands#blueIcon\");\r\n        }\r\n    }\r\n\r\n    removePlacemark(placemark) {\r\n        this.yandexMap.geoObjects.remove(placemark);\r\n    }\r\n\r\n}","import React from \"react\";\r\n\r\nconst RoutePoint = (props) => {\r\n\r\n    const onRemoveClickHandler = (event) => {\r\n        //prevent loading geo data for placemark\r\n        event.stopPropagation();\r\n        props.onRemoveHandler();\r\n    }\r\n\r\n    const showGeoData = props.geoDataShown && props.geoData;\r\n\r\n    let rpClassName = \"route-point list__route-point\";\r\n    if(props.dragStarted) {\r\n        rpClassName += \" list__route-point_drag-started\";\r\n    }\r\n    if(props.dragEntered) {\r\n        rpClassName += \" list__route-point_drag-entered\";\r\n    }\r\n\r\n    return (\r\n        <div className={rpClassName} draggable=\"true\"\r\n            onDragStart={props.onDragStartHandler}\r\n            onDragEnd={props.onDragEndHandler}\r\n            onDragEnter={props.onDragEnterHandler}\r\n            onDragLeave={props.onDragLeaveHandler}\r\n            onDragOver={props.onDragOverHandler}\r\n            onDrop={props.onDropHandler}\r\n        >\r\n            <div className={\"route-point__main-info\"}>\r\n                <span className={\"route-point__name\"}>{props.name}</span>\r\n                <span className={\"route-point__remove-cross\"} title={\"Remove route point\"} \r\n                    onClick={onRemoveClickHandler}>✖</span>\r\n            </div>\r\n            <div className={\"route-point__address-link\"} onClick={props.onClickHandler}>\r\n                {showGeoData ? \"Hide address\" : \"View address\"}\r\n            </div>\r\n            <div className={`route-point__geo-data-info${(showGeoData && \" route-point__geo-data-info_shown\") || \"\"}`}>\r\n                {showGeoData && `${props.geoData.name}. ${props.geoData.description}.`}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RoutePoint;","import React from \"react\";\r\n\r\nimport RoutePoint from \"./route-point\";\r\n\r\nexport default class RoutePointsList extends React.Component {\r\n\r\n    state = {\r\n        startIndex: null,\r\n        enterIndex: null\r\n    };\r\n\r\n    onDragStart = (index) => {\r\n        this.setState({\r\n            startIndex: index\r\n        });\r\n    }\r\n\r\n    onDragEnd = () => {\r\n        this.setState({\r\n            startIndex: null\r\n        });\r\n    }\r\n\r\n    onDragEnter = (index) => {\r\n        this.setState({\r\n            enterIndex: index\r\n        })\r\n    }\r\n\r\n    onDragLeave = () => {\r\n        this.setState({\r\n            enterIndex: null\r\n        });\r\n    }\r\n\r\n    onDragOver(e) {\r\n        if(e.preventDefault) {\r\n            e.preventDefault();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    onDrop = (index) => {\r\n        if(this.state.startIndex !== index) {\r\n            this.props.onPointDropHandler(this.state.startIndex, index);\r\n        }\r\n        this.setState({\r\n            enterIndex: null\r\n        });\r\n    }\r\n\r\n    onInputKeyUp = (event) => {\r\n        if(event.keyCode !== 13 || !event.target.value) {\r\n            return;\r\n        }\r\n        this.props.onNameSetHandler(event.target.value);\r\n        event.target.value = null;\r\n    }\r\n\r\n    render() {\r\n        const routePoints = (this.props.routePoints || []).map((p, ind) => (\r\n            <RoutePoint key={p.id} name={p.name}\r\n                geoDataShown={p.geoDataShown}\r\n                geoData={p.geoData}\r\n                dragStarted={this.state.startIndex === ind}\r\n                dragEntered={this.state.enterIndex === ind}\r\n                onDragStartHandler={() => this.onDragStart(ind)}\r\n                onDragEnterHandler={() => this.onDragEnter(ind)}\r\n                onDragEndHandler={this.onDragEnd}\r\n                onDragLeaveHandler={this.onDragLeave}\r\n                onDragOverHandler={this.onDragOver}\r\n                onDropHandler={() => this.onDrop(ind)}\r\n                onClickHandler={() => this.props.onClickHandler(ind)}\r\n                onRemoveHandler={() => this.props.onRemovePointHandler(ind)}\r\n            />\r\n        ));\r\n\r\n        return (\r\n            <div className={\"route-points-list\"}>\r\n                <div className={\"route-points-list__input-wrapper\"}>\r\n                    <input type=\"text\"\r\n                        placeholder=\"New route point\"\r\n                        className={\"route-points-list__input\"}\r\n                        onKeyUp={this.onInputKeyUp}\r\n                    />\r\n                </div>\r\n                <div className={\"list\"}>{routePoints}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","export default class DragAndDropTouch {\r\n    //max ms between clicks in a double click\r\n    static get _DBLCLICK() {\r\n        return 500;\r\n    }\r\n    //pixels to move before drag starts\r\n    static get _THRESHOLD() {\r\n        return 5;\r\n    }\r\n    //drag image opacity\r\n    static get _OPACITY() {\r\n        return 0.5;\r\n    }\r\n    //ms to hold before raising contextmenu event\r\n    static get _CTXMENU() {\r\n        return 900;\r\n    }\r\n    //potentially troublesome attributes\r\n    static get _rmvAttrs() {\r\n        return [\"id\", \"class\", \"style\", \"draggable\"]; \r\n    }\r\n    static get _kbdProps() {\r\n        return [\"altKey\", \"ctrlKey\", \"metaKey\", \"shiftKey\"];\r\n    }\r\n    static get _ptProps() {\r\n        return [\"pageX\", \"pageY\", \"clientX\", \"clientY\", \"screenX\", \"screenY\"];\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates handlers for touch events to imitate HTML5 DnD events.\r\n     */\r\n    static createHandlers() {\r\n        if(DragAndDropTouch._instance) {\r\n            return;\r\n        }\r\n        \r\n        DragAndDropTouch._instance = new (class {\r\n            constructor() {\r\n                this._lastCLick = 0;\r\n                if(\"ontouchstart\" in document) {\r\n                    document.addEventListener(\"touchstart\", this.touchStart.bind(this), { passive: false });\r\n                    document.addEventListener(\"touchmove\", this.touchMove.bind(this), { passive: false });\r\n                    document.addEventListener(\"touchend\", this.touchEnd.bind(this), { passive: false });\r\n                    document.addEventListener(\"touchcancel\", this.touchEnd.bind(this), { passive: false });\r\n                } \r\n            }\r\n        \r\n            touchStart(e) {\r\n                if(!this._shouldHandle(e)) {\r\n                    return;\r\n                }\r\n                if(Date.now() - this._lastClick < DragAndDropTouch._DBLCLICK) {\r\n                    if(this._dispatchEvent(e, \"dblclick\", e.target)) {\r\n                        e.preventDefault();\r\n                        this._reset();\r\n                        return;\r\n                    }\r\n                }\r\n                this._reset();\r\n                const src = this._closestDraggable(e.target);\r\n                if(!src) {\r\n                    return;\r\n                }\r\n                //give caller a chance to handle the hover/move events\r\n                if(this._dispatchEvent(e, \"mousemove\", e.target) \r\n                    || this._dispatchEvent(e, \"mousedown\", e.target)) {\r\n                    return;\r\n                }\r\n                //getting ready to start dragging\r\n                this._dragSource = src;\r\n                this._ptDown = this._getPoint(e);\r\n                this._lastTouch = e;\r\n                e.preventDefault();\r\n                //show context menu if the user hasn't started dragging after a while\r\n                setTimeout(() => {\r\n                    if(this._dragSource === src && this._img === null) {\r\n                        if(this._dispatchEvent(e, \"contextmenu\", src)) {\r\n                            this._reset();\r\n                        }\r\n                    }\r\n                }, DragAndDropTouch._CTXMENU);\r\n            }\r\n\r\n            touchMove(e) {\r\n                if(!this._shouldHandle(e)) {\r\n                    return;\r\n                }\r\n                const target = this._getTarget(e);\r\n                //check if target wants to handle move\r\n                if(this._dispatchEvent(e, \"mousemove\", target)) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                //start dragging\r\n                if(this._dragSource && !this._img) {\r\n                    const delta = this._getDelta(e);\r\n                    if(delta > DragAndDropTouch._THRESHOLD) {\r\n                        this._dispatchEvent(e, \"dragstart\", this._dragSource);\r\n                        this._createImage(e);\r\n                        this._dispatchEvent(e, \"dragenter\", target);\r\n                    }\r\n                }\r\n                //continue dragging\r\n                if (this._img) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault(); // prevent scrolling\r\n                    if (target !== this._lastTarget) {\r\n                        this._dispatchEvent(this._lastTouch, \"dragleave\", this._lastTarget);\r\n                        this._dispatchEvent(e, \"dragenter\", target);\r\n                        this._lastTarget = target;\r\n                    }\r\n                    this._moveImage(e);\r\n                    this._dispatchEvent(e, \"dragover\", target);\r\n                }\r\n            }\r\n\r\n            touchEnd(e) {\r\n                if(!this._shouldHandle(e)) {\r\n                    return;\r\n                }\r\n                //check if target wants to handle up\r\n                if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // user clicked the element but didn't drag, so clear the source and simulate a click\r\n                if(!this._img) {\r\n                    this._dragSource = null;\r\n                    this._dispatchEvent(this._lastTouch, \"click\", e.target);\r\n                    this._lastClick = Date.now();\r\n                }\r\n                // finish dragging\r\n                this._destroyImage();\r\n                if (this._dragSource) {\r\n                    if (e.type.indexOf(\"cancel\") < 0) {\r\n                        this._dispatchEvent(this._lastTouch, \"drop\", this._lastTarget);\r\n                    }\r\n                    this._dispatchEvent(this._lastTouch, \"dragend\", this._dragSource);\r\n                    this._reset();\r\n                }\r\n            }\r\n\r\n            //ignore events that have been handled or that involve more than one touch\r\n            _shouldHandle(e) {\r\n                return e && !e.defaultPrevented\r\n                    && e.touches && e.touches.length < 2;\r\n            }\r\n\r\n            //get closest draggable ancestor\r\n            _closestDraggable(e) {\r\n                for(; e; e = e.parentElement) {\r\n                    if (e.hasAttribute('draggable')) {\r\n                        return e;\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n\r\n            // get the element at a given touch event\r\n            _getTarget(e) {\r\n                const pt = this._getPoint(e);\r\n                let el = document.elementFromPoint(pt.x, pt.y);\r\n                while (el && getComputedStyle(el).pointerEvents === \"none\") {\r\n                    el = el.parentElement;\r\n                }\r\n                return el;\r\n            }\r\n\r\n            //create drag image from src element\r\n            _createImage(e) {\r\n                if(this._img) {\r\n                    this._destroyImage();\r\n                }\r\n                const src = this._dragSource;\r\n                this._img = src.cloneNode(true);\r\n                this._copyStyle(src, this._img);\r\n                //this._img.style.top = this._img.style.left = '-9999px';\r\n\r\n                const rc = src.getBoundingClientRect();\r\n                const pt = this._getPoint(e);\r\n                this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top };\r\n                this._img.style.opacity = DragAndDropTouch._OPACITY.toString();\r\n                // add image to document\r\n                this._moveImage(e);\r\n                document.body.appendChild(this._img);\r\n            }\r\n\r\n            // move the drag image element\r\n            _moveImage(e) {\r\n                requestAnimationFrame(() => {\r\n                    const pt = this._getPoint(e, true);\r\n                    const s = this._img.style;\r\n                    s.position = 'absolute';\r\n                    s.pointerEvents = 'none';\r\n                    s.zIndex = '999999';\r\n                    s.left = Math.round(pt.x - this._imgOffset.x) + 'px';\r\n                    s.top = Math.round(pt.y - this._imgOffset.y) + 'px';\r\n                });\r\n            }\r\n\r\n            _copyStyle(src, dist) {\r\n                DragAndDropTouch._rmvAttrs.forEach(attr => {\r\n                    dist.removeAttribute(attr);\r\n                });\r\n                const cs = getComputedStyle(src);\r\n                for (let i = 0; i < cs.length; i++) {\r\n                    let key = cs[i];\r\n                    dist.style[key] = cs[key];\r\n                }\r\n                dist.style.pointerEvents = 'none';\r\n                // and repeat for all children\r\n                for (var i = 0; i < src.children.length; i++) {\r\n                    this._copyStyle(src.children[i], dist.children[i]);\r\n                }\r\n            }\r\n\r\n            //dispose of drag image element\r\n            _destroyImage() {\r\n                if(this._img && this._img.parentElement) {\r\n                    this._img.parentElement.removeChild(this._img);\r\n                }\r\n                this._img = null;\r\n            }\r\n\r\n            //get distance between the current touch event and the first one\r\n            _getDelta(e) {\r\n                const p = this._getPoint(e);\r\n                return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y);\r\n            }\r\n\r\n            //get point for a touch event\r\n            _getPoint(e, page) {\r\n                if(e && e.touches) {\r\n                    e = e.touches[0];\r\n                }\r\n                return {\r\n                    x: page ? e.pageX : e.clientX,\r\n                    y: page ? e.pageY : e.clientY\r\n                }\r\n            }\r\n\r\n            _reset() {\r\n                this._destroyImage();\r\n                this._dragSource = null;\r\n                this._lastTouch = null;\r\n                this._lastTarget = null;\r\n                this._ptDown = null;\r\n                this._dataTransfer = DragAndDropTouch._createDataTransfer();\r\n            }\r\n\r\n            _dispatchEvent(e, type, target) {\r\n                if(!(e && target)) {\r\n                    return false;\r\n                }\r\n\r\n                let evt = document.createEvent(\"Event\");\r\n                evt.initEvent(type, true, true);\r\n                let t = e.touches ? e.touches[0] : e;\r\n                evt.button = 0;\r\n                evt.buttons = 1;\r\n                this._copyProps(evt, e, DragAndDropTouch._kbdProps);\r\n                this._copyProps(evt, t, DragAndDropTouch._ptProps);\r\n                evt.dataTransfer = this._dataTransfer;\r\n                target.dispatchEvent(evt);\r\n                return evt.defaultPrevented;\r\n            }\r\n\r\n            _copyProps(dst, src, props) {\r\n                props.forEach(prop => {\r\n                    dst[prop] = src[prop];\r\n                });\r\n            }\r\n        \r\n        })();\r\n    }\r\n\r\n    static _createDataTransfer() {\r\n        return new (class {\r\n            constructor() {\r\n                this._dropEffect = \"move\";\r\n                this._effectAllowed = \"move\";\r\n                this._data = {};\r\n        \r\n                this._dropEffectPossibleValues = [\"copy\", \"move\", \"link\", \"none\"];\r\n                this._effectAllowedPossibleValues = [\"none\", \"copy\", \"copyLink\",\r\n                    \"copyMove\", \"link\", \"linkMove\", \"move\", \"all\", \"uninitialized\"];\r\n            }\r\n        \r\n            get dropEffect() {\r\n                return this._dropEffect;\r\n            }\r\n        \r\n            set dropEffect(value) {\r\n                if(!this._dropEffectPossibleValues.includes(value)) {\r\n                    throw new Error(`dropEffect value should be one of ${this._dropEffectPossibleValues}`);\r\n                }\r\n                this._dropEffect = value;\r\n            }\r\n        \r\n            get effectAllowed() {\r\n                return this._effectAllowed;\r\n            }\r\n        \r\n            set effectAllowed(value) {\r\n                if(!this._effectAllowedPossibleValues.includes(value)) {\r\n                    throw new Error(`dropEffect value should be one of ${this._effectAllowedPossibleValues}`);\r\n                }\r\n                this._effectAllowed = value;\r\n            }\r\n        \r\n            getData(type) {\r\n                return this._data[type] || \"\";\r\n            }\r\n        \r\n            setData(type, value) {\r\n                this._data[type] = value;\r\n            }\r\n        \r\n            clearData(type) {\r\n                if(type != null) {\r\n                    delete this._data[type];\r\n                } else {\r\n                    this._data = null;\r\n                }\r\n            }\r\n        })();\r\n    }\r\n}","import React from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nimport YandexMapApiWrapper from \"../ymap-api-wrapper\";\r\nimport RoutePointsList from \"./route-points-list\";\r\nimport DragAndDropTouch from \"../dnd-touch\";\r\n\r\nexport default class App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            routePoints: [],\r\n            lastUsedId: 0\r\n        };\r\n        this.ymapId = \"ymap\";\r\n        this.ymapApiWrapper = new YandexMapApiWrapper();\r\n        DragAndDropTouch.createHandlers();\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"load\", () => {\r\n            this.ymapApiWrapper.createMap(this.ymapId, [55.75136970917547, 37.61889271429428], 15);\r\n        });\r\n    }\r\n\r\n    addRoutePoint = (name) => {\r\n        try {\r\n            const id = this.state.lastUsedId + 1;\r\n            const placemark = this.ymapApiWrapper.createPlacemark(name, () => this.placemarkDragEndHandler(id));\r\n            const routePoint = { name, id, placemark };\r\n            const routePoints = this.state.routePoints.slice().concat(routePoint);\r\n            this.ymapApiWrapper.updatePolyline(routePoints.map(rp => rp.placemark));\r\n\r\n            this.setState({\r\n                routePoints,\r\n                lastUsedId: id\r\n            });\r\n        } catch(error) {\r\n            this.showErrorToast(\"Error occurred during adding placemark.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles placemark drag ending. \r\n     * @param id Route point id. \r\n     */\r\n    placemarkDragEndHandler = (id) => {\r\n        try {\r\n            const routePoints = this.state.routePoints;\r\n            const routePoint = routePoints.find(rp => rp.id === id);\r\n            routePoint.geoData = null;\r\n            routePoint.geoDataShown = false;\r\n            this.ymapApiWrapper.updatePolyline(this.state.routePoints.map(rp => rp.placemark));\r\n    \r\n            this.setState({ routePoints });\r\n        } catch(error) {\r\n            this.showErrorToast(\"Error occurred during dragging placemark.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes route point from the list and the map.\r\n     * @param ind Index of the route point in the route points list. \r\n     */\r\n    removeRoutePoint = (ind) => {\r\n        try {\r\n            const currentRoutePoints = this.state.routePoints;\r\n            const placemarkToRemove = currentRoutePoints[ind].placemark;\r\n            const routePoints = currentRoutePoints.slice(0, ind).concat(currentRoutePoints.slice(ind+1));\r\n            this.ymapApiWrapper.removePlacemark(placemarkToRemove);\r\n            this.ymapApiWrapper.updatePolyline(routePoints.map(rp => rp.placemark));\r\n\r\n            this.setState({ routePoints });\r\n        } catch(error) {\r\n            this.showErrorToast(\"Error occurred during removing placemark.\");\r\n        }\r\n    } \r\n\r\n    /**\r\n     * Swaps two points in the route points list.\r\n     * @param fromInd \"From\" index in the route points list.\r\n     * @param toInd \"To\" index in the route points list.\r\n     */\r\n    swapRoutePoints = (fromInd, toInd) => {\r\n        try{\r\n            const from = Math.min(fromInd, toInd);\r\n            const to = Math.max(fromInd, toInd);\r\n    \r\n            const currentRoutePoints = this.state.routePoints;\r\n            const fromPoint = currentRoutePoints[from];\r\n            const toPoint = currentRoutePoints[to];\r\n            const routePoints = currentRoutePoints\r\n                .slice(0, from)\r\n                .concat(toPoint)\r\n                .concat(currentRoutePoints.slice(from + 1, to))\r\n                .concat(fromPoint)\r\n                .concat(currentRoutePoints.slice(to + 1));\r\n    \r\n            this.ymapApiWrapper.updatePolyline(routePoints.map(rp => rp.placemark));\r\n    \r\n            this.setState({ routePoints });\r\n        } catch(error) {\r\n            this.showErrorToast(\"Error occurred during swapping placemarks.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Loads geographic data for the route point.\r\n     * @param ind Index of the route point in the route points list.\r\n     */\r\n    getGeographicAddress = async (ind) => {\r\n        try {\r\n            const routePoints = this.state.routePoints;\r\n            const routePoint = routePoints[ind];\r\n            const placemark = routePoint.placemark;\r\n    \r\n            const toggleGeoData = () => {\r\n                const newGeoDataShownState = !routePoint.geoDataShown;\r\n                this.ymapApiWrapper.togglePlacemarkFocus(placemark, newGeoDataShownState);\r\n                routePoint.geoDataShown = newGeoDataShownState;\r\n\r\n                this.setState({ routePoints });\r\n            }\r\n            \r\n            if(!routePoint.geoDataShown && !routePoint.geoData) {\r\n                const newGeoDataShownState = true;\r\n                this.ymapApiWrapper.togglePlacemarkFocus(placemark, newGeoDataShownState);\r\n                routePoint.geoData = await this.ymapApiWrapper.getPlacemarkGeographicAddress(placemark);\r\n                routePoint.geoDataShown = newGeoDataShownState;\r\n                \r\n                this.setState({ routePoints });\r\n            } else {\r\n                toggleGeoData();\r\n            }\r\n        } catch(error) {\r\n            this.showErrorToast(\"Error occurred during loading geographic address.\");\r\n        }\r\n    }\r\n\r\n    showErrorToast(errorText) {\r\n        toast(errorText, { \r\n            type: toast.TYPE.ERROR, \r\n            bodyClassName: \"notification-container__notification-body\" \r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"wrapper\"}>\r\n                <div className={\"wrapper__route-points-list\"}>\r\n                    <RoutePointsList \r\n                        routePoints={this.state.routePoints}\r\n                        onPointDropHandler={this.swapRoutePoints}\r\n                        onRemovePointHandler={this.removeRoutePoint}\r\n                        onNameSetHandler={this.addRoutePoint}\r\n                        onClickHandler={this.getGeographicAddress} \r\n                    />\r\n                </div>\r\n                <div className={\"wrapper__yandex-map\"}>\r\n                    <div id={this.ymapId} className={\"yandex-map\"}></div>\r\n                </div>\r\n                <ToastContainer \r\n                    hideProgressBar={true} \r\n                    className={\"notification-container\"}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { hasError: false };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        return { hasError: true };\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError) {\r\n            return (\r\n                <p>\r\n                    Something went wrong. Please, refresh the page and try again. \r\n                    If this message appears again, feel free to contact us via email.\r\n                </p>\r\n            );\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport App from \"./components/app\";\r\nimport ErrorBoundary from \"./error-boundary\";\r\nimport \"./styles/main.css\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nrender(\r\n    (\r\n        <ErrorBoundary>\r\n            <App />\r\n        </ErrorBoundary>\r\n    ), \r\n    document.getElementById(\"root\")\r\n);"],"sourceRoot":""}